; supervisor config file

[unix_http_server]
file=/var/run/supervisor.sock   ; (the path to the socket file)
chmod=0700                       ; sockef file mode (default 0700)

[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
childlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
user=root ; set user to root

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket

[inet_http_server]         ; inet (TCP) server disabled by default
port=127.0.0.1:8059        ; (ip_address:port specifier, *:port for all iface)
; username=user              ; (default is no username (open server))
; password=123               ; (default is no password (open server))

; The [include] section can just contain the "files" setting.  This
; setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.

[include]
files = /etc/supervisor/conf.d/*.conf

[program:rsyslog]
command=/usr/sbin/rsyslogd -n
priority=49
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
autostart=true ; start at supervisord start (default: true)
autorestart=true ; whether/when to restart (default: unexpected) 
startretries=5   ; max # of serial start failures (default 3)

[program:nginx]
command=/usr/local/openresty/nginx/sbin/nginx -c /etc/nginx/nginx.conf -g "daemon off;"
priority=50
redirect_stderr=true 
;stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
stdout_logfile=/proc/1/fd/1 ; log error into stdout to see in docker logs
stdout_logfile_maxbytes=0
autostart=true ; start at supervisord start (default: true)
autorestart=true ; whether/when to restart (default: unexpected) 
startretries=5   ; max # of serial start failures (default 3)

[program:sslh]
command=/usr/sbin/sslh -f -p 0.0.0.0:%(ENV_WORKSPACE_PORT)s --ssh 127.0.0.1:22 --http 127.0.0.1:8092 --ssl 127.0.0.1:8092
priority=51
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
autostart=true ; start at supervisord start (default: true)
autorestart=true ; whether/when to restart (default: unexpected) 
startretries=5   ; max

[program:sshd]
command=env -i /usr/sbin/sshd -D -e -f /etc/ssh/sshd_config
; use env -i to reset the environment, because otherwise too many environment variables might prevent a client from connecting
; problem is mainly with Kubernetes, since it creates multiple environment variables for every service if enableServiceLinks is not set
priority=52
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
;stderr_logfile=/proc/1/fd/1 ; log error into stdout to see in docker logs
;stderr_logfile_maxbytes=0
autostart=true ; start at supervisord start (default: true)
autorestart=true ; whether/when to restart (default: unexpected) 
startretries=5   ; max # of serial start failures (default 3)

[program:jupyter]
command=/usr/local/bin/start-notebook.sh
priority=54
autostart=true
autorestart=true
redirect_stderr=true 
stdout_logfile=/proc/1/fd/1 ; log error into stdout to see in docker logs
stdout_logfile_maxbytes=0
#stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
startretries=5   ; max # of serial start failures (default 3)

[program:vncserver]
command=%(ENV_RESOURCES_PATH)s/scripts/start-vnc-server.sh
priority=55
autostart=true
autorestart=true
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
startretries=5   ; max # of serial start failures (default 3)

[program:cron]
command=/usr/sbin/cron -f -L 15 ; run in forground and log everything
autostart=true
autorestart=true
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
startretries=5   ; max # of serial start failures (default 3)

[program:xrdp]
command=/usr/sbin/xrdp -nodaemon 
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
autostart=true ; start at supervisord start (default: true)
autorestart=true ; whether/when to restart (default: unexpected) 
startretries=5   ; max

[program:vscode]
command=/usr/local/bin/code-server --port=8054 --allow-http --disable-telemetry --user-data-dir=%(ENV_HOME)s/.config/Code/ --extensions-dir=%(ENV_HOME)s/.vscode/extensions/ --auth=none /workspace/
autostart=true
autorestart=true
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
startretries=5   ; max # of serial start failures (default 3)

[program:glances]
command=/opt/conda/bin/glances --enable-process-extended --enable-irq -w -p 8053 
autostart=true
autorestart=true
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
startretries=5   ; max # of serial start failures (default 3)

[program:netdata]
command=/usr/sbin/netdata -D -p 8050
autostart=true
autorestart=true
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
startretries=5   ; max # of serial start failures (default 3)

[program:filebrowser]
command=/usr/local/bin/filebrowser --port=8055 --baseurl="%(ENV_WORKSPACE_BASE_URL)s/shared/filebrowser/" --database=%(ENV_HOME)s/filebrowser.db
autostart=true
autorestart=true
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
startretries=5   ; max # of serial start failures (default 3)

[program:ungit]
command=/usr/bin/node /usr/lib/node_modules/ungit/source/server.js --port=8051 --launchBrowser=0 --bugtracking=false --rootPath="%(ENV_WORKSPACE_BASE_URL)s/tools/ungit"
;/usr/bin/ungit -> starts two processes and is not quitting correctly -> seems to only accept quitting via ctrl+c in terminal 
autostart=true
autorestart=true
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
startretries=5   ; max # of serial start failures (default 3)

[program:novnc]
command=python -m websockify --web  %(ENV_RESOURCES_PATH)s/novnc/ 6901 localhost:5901
; the launch script cannot be terminated -> %(ENV_RESOURCES_PATH)s/novnc/utils/launch.sh --vnc localhost:5901 --listen 6901
directory=%(ENV_RESOURCES_PATH)s/novnc/utils/websockify/
autostart=true
autorestart=true
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
startretries=5   ; max # of serial start failures (default 3)

